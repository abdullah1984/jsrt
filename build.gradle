def distDir = "dist"

defaultTasks = ["clean", "test", "jar", "dist"]

subprojects {
    apply plugin: "java"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
    // all the stuff below should be in a separate function, but Groovy doesn't
    // allow calling a function within a closure
    def versionPrefix = "version="
    def ver = ""
    new File(rootDir, "jsrt-gui/src/main/resources/jsrt.properties").eachLine {
        if (!it.startsWith(versionPrefix)) return
        ver = it.substring(versionPrefix.size())
    }
    version = ver
    new File("VERSION.txt").withWriter { out ->
        out.writeLine(version)
    } 
    
    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile "junit:junit:4.11"
    }

    jar {
        dependsOn configurations.runtime
        from {
            configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
        }
        from sourceSets.main.allJava
    }
}

project(":jsrt-gui") {
    dependencies {
        compile project(":jsrt-api")
        compile "org.jfxtras:jfxtras-controls:8.0-r5"
    }

    jar {
        manifest {
            attributes "Main-Class": "org.fredy.jsrt.gui.JSRT"
        }
    }
}

project(":jsrt-examples") {
    dependencies {
        compile project(":jsrt-api")
    }
}

task clean {
    doLast {
        delete distDir
    }
}

task dist {
    doLast {
        def d = mkdir(distDir)
        subprojects.each { subproject ->
            subproject.tasks.jar.each { archiveTask ->
                copy {
                    from archiveTask.archivePath
                    into d
                }
            }
        }
        def ver = new File("VERSION.txt").text.trim()
        ant.zip(destfile: "jsrt-${ver}.zip", basedir: distDir)
    }
}

