def distDir = "dist"

defaultTasks = ["clean", "test", "jar", "dist"]

def javafxLib = "jfxrt.jar"

def getJavaFXPath(def javafxLib) {
    def javaHome = System.env["JAVA_HOME"]
    if (javaHome == null) {
        throw new RuntimeException("JAVA_HOME environment variable must be set")
    }
    def javafxrt = "jre" + File.separator + "lib" + File.separator + javafxLib
    return new File(javaHome, javafxrt).absolutePath
}

subprojects {
    apply plugin: "java"
    apply plugin: "eclipse"
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    version = "0.1.0"
    repositories {
        mavenCentral()
    }

    dependencies {
        compile files(getJavaFXPath(javafxLib))

        testCompile "junit:junit:4.8.2"
    }

    jar {
        dependsOn configurations.runtime
        from {
            configurations.runtime.findAll { !it.name.contains(javafxLib) }.collect { 
                it.isDirectory() ? it : zipTree(it)
            }
        }
        from sourceSets.main.allJava
    }
}

project(":jsrt-gui") {
    dependencies {
        compile project(":jsrt-api")
    }

    jar {
        manifest {
            attributes "Main-Class": "org.fredy.jsrt.gui.JSRT"
            attributes "Class-Path": getJavaFXPath(javafxLib)
        }
    }
}

project(":jsrt-examples") {
    dependencies {
        compile project(":jsrt-api")
    }
}

task clean << {
    delete distDir
}

task dist << {
    def d = mkdir(distDir)
    subprojects.each { subproject ->
        subproject.tasks.jar.each { archiveTask ->
            copy {
                from archiveTask.archivePath
                into d
            }
        }
    }
}

